//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /Users/hello.maciek/Documents/__rider/sql_parser/RecruitTask/ParsingSql/Antlr/Sql.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace ParsingSql.Antlr {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ISqlListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class SqlBaseListener : ISqlListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.parse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParse([NotNull] SqlParser.ParseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.parse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParse([NotNull] SqlParser.ParseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.sql_stmt_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSql_stmt_list([NotNull] SqlParser.Sql_stmt_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.sql_stmt_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSql_stmt_list([NotNull] SqlParser.Sql_stmt_listContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.sql_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSql_stmt([NotNull] SqlParser.Sql_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.sql_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSql_stmt([NotNull] SqlParser.Sql_stmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.alter_table_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAlter_table_stmt([NotNull] SqlParser.Alter_table_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.alter_table_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAlter_table_stmt([NotNull] SqlParser.Alter_table_stmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.analyze_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnalyze_stmt([NotNull] SqlParser.Analyze_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.analyze_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnalyze_stmt([NotNull] SqlParser.Analyze_stmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.attach_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttach_stmt([NotNull] SqlParser.Attach_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.attach_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttach_stmt([NotNull] SqlParser.Attach_stmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.begin_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBegin_stmt([NotNull] SqlParser.Begin_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.begin_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBegin_stmt([NotNull] SqlParser.Begin_stmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.commit_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommit_stmt([NotNull] SqlParser.Commit_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.commit_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommit_stmt([NotNull] SqlParser.Commit_stmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.compound_select_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompound_select_stmt([NotNull] SqlParser.Compound_select_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.compound_select_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompound_select_stmt([NotNull] SqlParser.Compound_select_stmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.create_index_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCreate_index_stmt([NotNull] SqlParser.Create_index_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.create_index_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCreate_index_stmt([NotNull] SqlParser.Create_index_stmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.create_table_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCreate_table_stmt([NotNull] SqlParser.Create_table_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.create_table_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCreate_table_stmt([NotNull] SqlParser.Create_table_stmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.create_trigger_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCreate_trigger_stmt([NotNull] SqlParser.Create_trigger_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.create_trigger_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCreate_trigger_stmt([NotNull] SqlParser.Create_trigger_stmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.create_view_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCreate_view_stmt([NotNull] SqlParser.Create_view_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.create_view_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCreate_view_stmt([NotNull] SqlParser.Create_view_stmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.create_virtual_table_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCreate_virtual_table_stmt([NotNull] SqlParser.Create_virtual_table_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.create_virtual_table_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCreate_virtual_table_stmt([NotNull] SqlParser.Create_virtual_table_stmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.delete_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDelete_stmt([NotNull] SqlParser.Delete_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.delete_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDelete_stmt([NotNull] SqlParser.Delete_stmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.delete_stmt_limited"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDelete_stmt_limited([NotNull] SqlParser.Delete_stmt_limitedContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.delete_stmt_limited"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDelete_stmt_limited([NotNull] SqlParser.Delete_stmt_limitedContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.detach_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDetach_stmt([NotNull] SqlParser.Detach_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.detach_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDetach_stmt([NotNull] SqlParser.Detach_stmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.drop_index_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDrop_index_stmt([NotNull] SqlParser.Drop_index_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.drop_index_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDrop_index_stmt([NotNull] SqlParser.Drop_index_stmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.drop_table_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDrop_table_stmt([NotNull] SqlParser.Drop_table_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.drop_table_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDrop_table_stmt([NotNull] SqlParser.Drop_table_stmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.drop_trigger_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDrop_trigger_stmt([NotNull] SqlParser.Drop_trigger_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.drop_trigger_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDrop_trigger_stmt([NotNull] SqlParser.Drop_trigger_stmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.drop_view_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDrop_view_stmt([NotNull] SqlParser.Drop_view_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.drop_view_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDrop_view_stmt([NotNull] SqlParser.Drop_view_stmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.factored_select_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFactored_select_stmt([NotNull] SqlParser.Factored_select_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.factored_select_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFactored_select_stmt([NotNull] SqlParser.Factored_select_stmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.insert_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInsert_stmt([NotNull] SqlParser.Insert_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.insert_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInsert_stmt([NotNull] SqlParser.Insert_stmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.pragma_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPragma_stmt([NotNull] SqlParser.Pragma_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.pragma_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPragma_stmt([NotNull] SqlParser.Pragma_stmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.reindex_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReindex_stmt([NotNull] SqlParser.Reindex_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.reindex_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReindex_stmt([NotNull] SqlParser.Reindex_stmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.release_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelease_stmt([NotNull] SqlParser.Release_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.release_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelease_stmt([NotNull] SqlParser.Release_stmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.rollback_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRollback_stmt([NotNull] SqlParser.Rollback_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.rollback_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRollback_stmt([NotNull] SqlParser.Rollback_stmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.savepoint_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSavepoint_stmt([NotNull] SqlParser.Savepoint_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.savepoint_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSavepoint_stmt([NotNull] SqlParser.Savepoint_stmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.simple_select_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimple_select_stmt([NotNull] SqlParser.Simple_select_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.simple_select_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimple_select_stmt([NotNull] SqlParser.Simple_select_stmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.select_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelect_stmt([NotNull] SqlParser.Select_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.select_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelect_stmt([NotNull] SqlParser.Select_stmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.select_or_values"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelect_or_values([NotNull] SqlParser.Select_or_valuesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.select_or_values"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelect_or_values([NotNull] SqlParser.Select_or_valuesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.update_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUpdate_stmt([NotNull] SqlParser.Update_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.update_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUpdate_stmt([NotNull] SqlParser.Update_stmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.update_stmt_limited"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUpdate_stmt_limited([NotNull] SqlParser.Update_stmt_limitedContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.update_stmt_limited"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUpdate_stmt_limited([NotNull] SqlParser.Update_stmt_limitedContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.vacuum_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVacuum_stmt([NotNull] SqlParser.Vacuum_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.vacuum_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVacuum_stmt([NotNull] SqlParser.Vacuum_stmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.column_def"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterColumn_def([NotNull] SqlParser.Column_defContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.column_def"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitColumn_def([NotNull] SqlParser.Column_defContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.type_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_name([NotNull] SqlParser.Type_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.type_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_name([NotNull] SqlParser.Type_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.column_constraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterColumn_constraint([NotNull] SqlParser.Column_constraintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.column_constraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitColumn_constraint([NotNull] SqlParser.Column_constraintContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.conflict_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConflict_clause([NotNull] SqlParser.Conflict_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.conflict_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConflict_clause([NotNull] SqlParser.Conflict_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] SqlParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] SqlParser.ExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.foreign_key_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForeign_key_clause([NotNull] SqlParser.Foreign_key_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.foreign_key_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForeign_key_clause([NotNull] SqlParser.Foreign_key_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.raise_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRaise_function([NotNull] SqlParser.Raise_functionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.raise_function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRaise_function([NotNull] SqlParser.Raise_functionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.indexed_column"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndexed_column([NotNull] SqlParser.Indexed_columnContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.indexed_column"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndexed_column([NotNull] SqlParser.Indexed_columnContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.table_constraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_constraint([NotNull] SqlParser.Table_constraintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.table_constraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_constraint([NotNull] SqlParser.Table_constraintContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.with_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWith_clause([NotNull] SqlParser.With_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.with_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWith_clause([NotNull] SqlParser.With_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.qualified_table_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQualified_table_name([NotNull] SqlParser.Qualified_table_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.qualified_table_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQualified_table_name([NotNull] SqlParser.Qualified_table_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.ordering_term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrdering_term([NotNull] SqlParser.Ordering_termContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.ordering_term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrdering_term([NotNull] SqlParser.Ordering_termContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.pragma_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPragma_value([NotNull] SqlParser.Pragma_valueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.pragma_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPragma_value([NotNull] SqlParser.Pragma_valueContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.common_table_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommon_table_expression([NotNull] SqlParser.Common_table_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.common_table_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommon_table_expression([NotNull] SqlParser.Common_table_expressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.result_column"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterResult_column([NotNull] SqlParser.Result_columnContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.result_column"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitResult_column([NotNull] SqlParser.Result_columnContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.table_or_subquery"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_or_subquery([NotNull] SqlParser.Table_or_subqueryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.table_or_subquery"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_or_subquery([NotNull] SqlParser.Table_or_subqueryContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.join_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJoin_clause([NotNull] SqlParser.Join_clauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.join_clause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJoin_clause([NotNull] SqlParser.Join_clauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.join_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJoin_operator([NotNull] SqlParser.Join_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.join_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJoin_operator([NotNull] SqlParser.Join_operatorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.join_constraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterJoin_constraint([NotNull] SqlParser.Join_constraintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.join_constraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitJoin_constraint([NotNull] SqlParser.Join_constraintContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.select_core"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelect_core([NotNull] SqlParser.Select_coreContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.select_core"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelect_core([NotNull] SqlParser.Select_coreContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.compound_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompound_operator([NotNull] SqlParser.Compound_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.compound_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompound_operator([NotNull] SqlParser.Compound_operatorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.cte_table_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCte_table_name([NotNull] SqlParser.Cte_table_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.cte_table_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCte_table_name([NotNull] SqlParser.Cte_table_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.signed_number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSigned_number([NotNull] SqlParser.Signed_numberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.signed_number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSigned_number([NotNull] SqlParser.Signed_numberContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.literal_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral_value([NotNull] SqlParser.Literal_valueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.literal_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral_value([NotNull] SqlParser.Literal_valueContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.unary_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnary_operator([NotNull] SqlParser.Unary_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.unary_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnary_operator([NotNull] SqlParser.Unary_operatorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.error_message"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterError_message([NotNull] SqlParser.Error_messageContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.error_message"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitError_message([NotNull] SqlParser.Error_messageContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.module_argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModule_argument([NotNull] SqlParser.Module_argumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.module_argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModule_argument([NotNull] SqlParser.Module_argumentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.column_alias"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterColumn_alias([NotNull] SqlParser.Column_aliasContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.column_alias"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitColumn_alias([NotNull] SqlParser.Column_aliasContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKeyword([NotNull] SqlParser.KeywordContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKeyword([NotNull] SqlParser.KeywordContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterName([NotNull] SqlParser.NameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitName([NotNull] SqlParser.NameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.function_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_name([NotNull] SqlParser.Function_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.function_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_name([NotNull] SqlParser.Function_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.database_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDatabase_name([NotNull] SqlParser.Database_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.database_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDatabase_name([NotNull] SqlParser.Database_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.table_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_name([NotNull] SqlParser.Table_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.table_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_name([NotNull] SqlParser.Table_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.table_or_index_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_or_index_name([NotNull] SqlParser.Table_or_index_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.table_or_index_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_or_index_name([NotNull] SqlParser.Table_or_index_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.new_table_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNew_table_name([NotNull] SqlParser.New_table_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.new_table_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNew_table_name([NotNull] SqlParser.New_table_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.column_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterColumn_name([NotNull] SqlParser.Column_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.column_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitColumn_name([NotNull] SqlParser.Column_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.collation_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCollation_name([NotNull] SqlParser.Collation_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.collation_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCollation_name([NotNull] SqlParser.Collation_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.foreign_table"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForeign_table([NotNull] SqlParser.Foreign_tableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.foreign_table"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForeign_table([NotNull] SqlParser.Foreign_tableContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.index_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndex_name([NotNull] SqlParser.Index_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.index_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndex_name([NotNull] SqlParser.Index_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.trigger_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTrigger_name([NotNull] SqlParser.Trigger_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.trigger_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTrigger_name([NotNull] SqlParser.Trigger_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.view_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterView_name([NotNull] SqlParser.View_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.view_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitView_name([NotNull] SqlParser.View_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.module_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModule_name([NotNull] SqlParser.Module_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.module_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModule_name([NotNull] SqlParser.Module_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.pragma_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPragma_name([NotNull] SqlParser.Pragma_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.pragma_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPragma_name([NotNull] SqlParser.Pragma_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.savepoint_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSavepoint_name([NotNull] SqlParser.Savepoint_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.savepoint_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSavepoint_name([NotNull] SqlParser.Savepoint_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.table_alias"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTable_alias([NotNull] SqlParser.Table_aliasContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.table_alias"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTable_alias([NotNull] SqlParser.Table_aliasContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.transaction_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTransaction_name([NotNull] SqlParser.Transaction_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.transaction_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTransaction_name([NotNull] SqlParser.Transaction_nameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="SqlParser.any_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAny_name([NotNull] SqlParser.Any_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SqlParser.any_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAny_name([NotNull] SqlParser.Any_nameContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace ParsingSql.Antlr
